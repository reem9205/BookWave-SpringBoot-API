package com.csis231.api.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * Entity representing a Comment in the database.
 */
@Entity
@Table(name = "comment")
public class Comment {

    /**
     * Unique identifier for the comment.
     * This field will be automatically generated by the database as the primary key.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "comment_id", nullable = false)
    private Long comment_id;

    /**
     * Foreign key referencing the Book entity.
     * Each comment is linked to a specific book through this book ID.
     */
    @ManyToOne
    @JoinColumn(name = "book_id", referencedColumnName = "book_id")
    private Book book;

    /**
     * The comment description of the book.
     * This field is required and cannot be null.
     */
    @Column(name = "comment_description")
    private String comment_description;

    /**
     * The rating of the book.
     * This field is required and cannot be null.
     */
    @Column(name = "rating")
    private int rating; // Rating given to the book

    /**
     * The date when the comment created.
     * This field is required and cannot be null.
     */
    @Column(name = "comment_date")
    private LocalDateTime comment_date;

    /**
     * Default constructor required by JPA.
     */
    public Comment() {
        this(null,"",0);
    }

    /**
     * Constructs a Comment with the specified book, description, and rating.
     * Also sets the comment creation date to the current date and time.
     *
     * @param book the book that the comment is associated with
     * @param description the content of the comment
     * @param rating the rating given to the book (e.g., 1 to 5)
     */
    public Comment(Book book, String description, int rating) {
        setComment(book, description, rating);
        setCommentDate(LocalDateTime.now());
    }

    // getters, and setters

    /**
     * Sets the details of the comment (book, description, and rating).
     *
     * @param book the book associated with the comment
     * @param description the description of the comment
     * @param rating the rating given by the user
     */
    public void setComment(Book book, String description, int rating){
        setBook(book);
        setCommentDescription(description);
        setRating(rating);
    }

    /**
     * Gets the unique ID of the comment.
     *
     * @return the comment ID
     */
    public Long getCommentId() {
        return comment_id;
    }

    /**
     * Sets the unique ID of the comment.
     *
     * @param commentId the ID to set
     */
    public void setCommentId(Long commentId) {
        this.comment_id = commentId;
    }

    /**
     * Gets the book associated with this comment.
     *
     * @return the book
     */
    public Book getBook() {
        return book;
    }

    /**
     * Sets the book associated with this comment.
     *
     * @param book the book to associate with the comment
     */
    public void setBook(Book book) {
        this.book = book;
    }

    /**
     * Gets the description of the comment.
     *
     * @return the comment description
     */
    public String getCommentDescription() {
        return comment_description;
    }

    /**
     * Sets the description of the comment.
     *
     * @param description the description to set
     */
    public void setCommentDescription(String description) {
        this.comment_description = description;
    }

    /**
     * Gets the rating given by the user for the book.
     *
     * @return the rating (e.g., 1 to 5)
     */
    public int getRating() {
        return rating;
    }

    /**
     * Sets the rating for the book.
     *
     * @param rating the rating to set (e.g., 1 to 5)
     */
    public void setRating(int rating) {
        this.rating = rating;
    }

    /**
     * Gets the date and time when the comment was created.
     *
     * @return the comment creation date
     */
    public LocalDateTime getCommentDate() {
        return comment_date;
    }

    /**
     * Sets the date and time when the comment was created.
     *
     * @param comment_date the date and time to set
     */
    public void setCommentDate(LocalDateTime comment_date) {
        this.comment_date = comment_date;
    }
}
